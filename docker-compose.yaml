services:
  nginx-sqlserver:
    image: nginx:1.25.1-alpine
    hostname: nginx
    container_name: nginx-sqlserver
    volumes: 
      - $PWD/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - $PWD/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - $PWD/nginx/certs/:/etc/nginx/conf.d/certs/
    networks:
      - metanet1-mssql
    ports:
      - 8443:443
      - 8080:80
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 64M
        reservations:
          cpus: '0.5'
          memory: 32M
    depends_on:
      metabase-sqlserver:
        condition: service_healthy
  metabase-sqlserver:
    build:
      context: metabase/.
      args:
        - MB_VERSION=v1.47.8
    container_name: metabase-sqlserver
    hostname: metabase
    volumes: 
    - /dev/urandom:/dev/random:ro
    ports:
      - 3031:3000
    networks: 
      - metanet1-mssql
    environment: 
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 5432
      MB_DB_USER: metabase
      MB_DB_PASS: mysecretpassword
      MB_DB_HOST: postgres-app-db
      MB_EMAIL_SMTP_HOST: maildev-sub
      MB_EMAIL_SMTP_PASSWORD: password
      MB_EMAIL_SMTP_PORT: 1025
      MB_EMAIL_SMTP_SECURITY: none
      MB_EMAIL_SMTP_USERNAME: admin
      JAVA_TOOL_OPTIONS: -Xmx1488m -Xms500m
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 3072M
        reservations:
          cpus: '4'
          memory: 1536M
    healthcheck:
      test: curl --fail -X GET -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
  mssql-2019:
    image: metabase/qa-databases:mssql-sample-2019
    container_name: mssql-2019
    hostname: mssql-2019
    networks:
      - metanet1-mssql
    ports:
      - 1433:1433
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 3072M
        reservations:
          cpus: '1'
          memory: 1536M
  mssql-2022:
    image: metabase/qa-databases:mssql-sample-2022
    container_name: mssql-2022
    hostname: mssql-2022
    networks:
      - metanet1-mssql
    ports:
      - 1434:1433
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 3072M
        reservations:
          cpus: '1'
          memory: 1536M
  openssh-server:
    image: lscr.io/linuxserver/openssh-server:version-8.8_p1-r1
    container_name: ssh
    hostname: ssh
    environment:
      - PUBLIC_KEY_FILE=/root/.ssh/id_ed25519.pub
      - USER_NAME=metabase
    volumes:
      - $PWD/ssh/sshd_config:/config/ssh_host_keys/sshd_config
      - $PWD/ssh/keys/:/root/.ssh/
    networks: 
      - metanet1-mssql
    ports:
      - 2222:2222
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 128M
        reservations:
          cpus: '1'
          memory: 64M
  postgres-app-db-sqlserver:
    image: postgres:15.2-alpine
    container_name: postgres-app-db-sqlserver
    hostname: postgres-app-db
    ports:
      - 5432:5432
    environment:
      - "POSTGRES_USER=metabase"
      - "POSTGRES_DB=metabase"
      - "POSTGRES_PASSWORD=mysecretpassword"
    volumes:
      - $PWD/postgres_origin:/var/lib/postgresql/data
    networks: 
      - metanet1-mssql
    # command: -c log_statement=all
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 128M
        reservations:
          cpus: '1'
          memory: 54M
  setup-sqlserver:
    build: setup/.
    container_name: setup-sqlserver
    volumes:
      - $PWD/setup/setup.py:/app/setup.py
    networks:
      - metanet1-mssql
    depends_on:
      metabase-sqlserver:
        condition: service_healthy
    command: python /app/setup.py
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 64M
        reservations:
          cpus: '0.5'
          memory: 32M
    environment:
      host: http://metabase
      port: 3000
      dbs: 3
  maildev-sub-sqlserver:
    image: maildev/maildev:2.1.0
    container_name: maildev-sub-sqlserver
    hostname: maildev-sub
    ports:
    - 3003:1080
    networks:
    - metanet1-mssql
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 64M
        reservations:
          cpus: '0.5'
          memory: 32M
networks: 
  metanet1-mssql:
    driver: bridge